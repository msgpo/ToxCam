version: 2
jobs:
  build:
    working_directory: /home/ubuntu
    docker:
      - image: ubuntu:14.04
    environment:
        - MAKEFLAGS: ""
        - CIRCLE_ARTIFACTS: "/tmp/artifacts"
## ----------- RASPI cross compile ----------------
        - RASPI_PATH: "/home/ubuntu/cc/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin:$PATH"
        - RASPI_SYSROOT_: "/home/ubuntu/cc/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/arm-linux-gnueabihf/sysroot"
        - RASPI_TOOL_PREFIX: arm-linux-gnueabihf
        - RASPI_INSTALL_DEST: "/home/ubuntu/installdest/"
        - RASPI_TARGET_: arm-linux-gnueabi
        - RASPI_HOST_: arm-linux-gnueabi
        - RASPI_CXX: $RASPI_TOOL_PREFIX-g++
        - RASPI_AR: $RASPI_TOOL_PREFIX-ar
        - RASPI_RANLIB: $RASPI_TOOL_PREFIX-ranlib
        - RASPI_CC: $RASPI_TOOL_PREFIX-gcc
        - RASPI_LD: $RASPI_TOOL_PREFIX-ld
        - RASPI_PKG_CONFIG_PATH: "/home/ubuntu/cc/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/arm-linux-gnueabihf/sysroot/usr/lib/pkgconfig"
        - RASPI_s_: "/home/ubuntu/src/"
        - RASPI_PKGSDIR: "/home/ubuntu/pkgs/"
        - CF2: " -O3 -g -fPIC -marm -march=armv8-a+crc -mtune=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard -ftree-vectorize "
        - CF3: " -funsafe-math-optimizations "
    # c-toxcore version used
        - CTOXCORE_VERSION_HASH: "zoff99/_0.1.10_2017_video_fix_09"
    # c-toxcore repo used
    # CTOXCORE_URL: "https://github.com/TokTok/c-toxcore"
        - CTOXCORE_URL: "https://github.com/zoff99/c-toxcore"
        - LIBSODIUM_VERSION: "tags/1.0.16"
        - LIBSODIUM_BRANCH: "1.0.16"
        - RASPBERRRY_TOOLS_HASH: d820ab9c21969013b4e56c7e9cba25518afcdd44

    steps:
      - run: sudo apt update
      # to make circleCI tools work properly ---
      - run: sudo apt install -y git ssh tar gzip ca-certificates
      # to make circleCI tools work properly ---
      - checkout
      - run: echo 127.0.0.1 devhost | sudo tee -a /etc/hosts
      - run: uname -a;pwd;df -h;id -a;lsb_release --all
      - run:
          command: |
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y cmake
           sudo DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y libtool autotools-dev automake checkinstall check git yasm libv4lconvert0 libv4l-dev
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libopus-dev libvpx-dev pkg-config
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libasound2-dev
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y linux-generic
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libjpeg-dev
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libpulse-dev
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libconfig-dev
           sudo DEBIAN_FRONTEND=noninteractive apt-get install -y astyle
           sudo bash -c "echo '::1             localhost ipv6-localhost ipv6-loopback' >> /etc/hosts"
           gcc --version
           astyle --version
           cmake --version

      - run:
          command: |
            mkdir -p "$CIRCLE_ARTIFACTS"
            echo aaa > "$CIRCLE_ARTIFACTS"/blub.txt
            ls -al "$CIRCLE_ARTIFACTS"/blub.txt

      - run:
          command: |
            ### submodules ----------------
            git submodule add --force https://github.com/TokTok/c-toxcore c-toxcore ; echo ok
            git submodule add --force https://github.com/jedisct1/libsodium libsodium ; echo ok
            git submodule init ; git submodule update ; echo ok
            # -- sometimes submodule can't find commit hash, whatever ------
            rm -Rf c-toxcore ; git clone "$CTOXCORE_URL"
            # -- sometimes submodule can't find commit hash, whatever ------
            cd c-toxcore/ ; git checkout "$CTOXCORE_VERSION_HASH"
            cd libsodium/ ; git checkout $LIBSODIUM_VERSION
            ### submodules ----------------

      # Save artifacts
      - store_artifacts:
          path: /tmp/artifacts

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
